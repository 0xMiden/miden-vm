
use.std::crypto::stark::constants


#! Load the public inputs in memory starting from the address referenced by `public_inputs_ptr`.
#! In parallel, compute the hash of the public inputs being loaded. The hashing starts with
#! capacity registers of the hash function set to `C` resulting from hashing the proof context.
#! The output D is the digest of the hashing.
#!
#! Input: [C, ...]
#! Output: [D, ...]
#! Cycles: 38
export.load
    # Unhash the public inputs from the advice provider.
    # The public inputs are made up of the input operand stack and the output operand stack
    # both of length 16 field elements.
    exec.constants::public_inputs_ptr
    movdn.4
    padw padw
    repeat.4
        adv_loadw
        swapw
        adv_loadw
        hperm
    end
    adv_loadw
    swapw
    exec.constants::zero_word mem_loadw
    hperm

    dropw
    swapw
    dropw
    movup.4 drop
end
