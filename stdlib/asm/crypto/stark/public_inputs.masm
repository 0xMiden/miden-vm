
const.ZERO_ZERO_ZERO_ONE_PTR=4294967294
const.SEED_PTR=4294967293

#! Load the public inputs in memory starting from the address referenced by `public_inputs_ptr`.
#! In parallel, compute the hash of the public inputs being loaded. The hashing starts with
#! capacity registers of the hash function set to `C` resulting from hashing the proof context.
#!
#! Input: [public_inputs_ptr, C]
#! Output: [...] 
export.load
    
    # TODO: load the public inputs using public_inputs_ptr
    drop

    # Unhash the public inputs from the advice provider.
    # The following assumes that the public inputs contain only the input and output states
    # of the operand stack and both are of length exactly 16. 
    # TODO: generalize to any number of public inputs supported by the VM.
    push.0.0.0.0
    push.0.0.0.0
    repeat.4
        adv_loadw
        swapw
        adv_loadw
        hperm
    end
    adv_loadw
    swapw
    mem_loadw.ZERO_ZERO_ZERO_ONE_PTR
    hperm
    dropw
    mem_storew.SEED_PTR
    dropw
    dropw
end