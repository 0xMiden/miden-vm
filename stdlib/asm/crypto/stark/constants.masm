# CONSTANTS
# =================================================================================================

# General constants
const.ROOT_UNITY=7277203076849721926
const.DOMAIN_OFFSET=7
const.DOMAIN_OFFSET_INV=2635249152773512046

# Number of random extension field coefficients related to the auxiliary trace (i.e. the alphas)
const.NUM_AUX_TRACE_COEFS=2

# Number of constraints, both boundary and transitional
# Note: If the full set of all implemented constraints is used then this should be set to 226
const.NUM_CONSTRAINTS=4

# Blowup factor
const.BLOWUP_FACTOR=8
const.BLOWUP_FACTOR_LOG=3

# Max cycle length for periodic columns
const.MAX_CYCLE_LEN_LOG=3

# Constraint evaluation circuit digest
const.DIGEST_0=13839693060569330762
const.DIGEST_1=2312826173762406067
const.DIGEST_2=8866828852882360297
const.DIGEST_3=18124346805341043858

# Number of inputs to the constraint evaluation circuit
const.NUM_INPUTS_CIRCUIT=232

# Number of evaluation gates in the constraint evaluation circuit
const.NUM_EVAL_GATES_CIRCUIT=88

# Number of fixed length public inputs with padding (in field elements)
# This is composed of the input/output operand stacks (16 * 2) and the program digest (4) and four
# zeros for padding to the next multiple of 4. Note that, then, the fixed length public inputs
# which are stored as extension field elements will be double-word aligned. 
const.NUM_FIXED_LEN_PUBLIC_INPUTS=40

# Op label for kernel procedures table messages
const.KERNEL_OP_LABEL=0

# MEMORY POINTERS
# =================================================================================================

## General

### Commitment to main, auxiliary and composition polynomials traces
const.MAIN_TRACE_COM_PTR=4294813200
const.AUX_TRACE_COM_PTR=4294813204
const.COMPOSITION_POLY_COM_PTR=4294813208

### Instant-specific constants
const.LDE_DOMAIN_INFO_PTR=4294813212
const.LDE_DOMAIN_GEN_PTR=4294813213
const.LDE_DOMAIN_LOG_SIZE_PTR=4294813214
const.LDE_DOMAIN_SIZE_PTR=4294813215
const.Z_PTR=4294813216
const.NUM_QUERIES_PTR=4294813220
const.REMAINDER_POLY_SIZE_PTR=4294813221
const.NUM_FRI_LAYERS_PTR=4294813222
const.REMAINDER_POLY_ADDRESS_PTR=4294813223
const.TRACE_LENGTH_PTR=4294813224
const.FRI_QUERIES_ADDRESS_PTR=4294813225
const.TRACE_LENGTH_LOG_PTR=4294813226
const.GRINDING_FACTOR_PTR=4294813227

### Zero word, mainly used in the context of RPO
const.ZERO_WORD_PTR=4294813228

### Address to store the non-deterministically provided DEEP polynomial batching randomness
const.ALPHA_DEEP_ND_PTR=4294813232

### Address to store the fixed terms, accross all queries, of the DEEP queries.
const.OOD_FIXED_TERM_HORNER_EVALS_PTR=4294813236

### Number of public inputs (in field elements)
const.NUM_PUBLIC_INPUTS_PTR=4294813240

### Trace domain generator
const.TRACE_DOMAIN_GENERATOR_PTR=4294813241

### Variable length public inputs address
const.VARIABLE_LEN_PUBLIC_INPUTS_ADDRESS_PTR=4294813242

### Public inputs address
const.PUBLIC_INPUTS_ADDRESS_PTR=4294813243

### State of RPO-based random coin
const.C_PTR=4294813244
const.R1_PTR=4294813248
const.R2_PTR=4294813252

### Address used for storing temporary values:
const.TMP1=4294913256
const.TMP2=4294913260
const.TMP3=4294913264
const.TMP4=4294913268

### This will hold the non-deterministically loaded 2 random challenges, which will be
### checked for correctness once we receive the commitment to the auxiliary trace.
const.AUX_RAND_ND_PTR=4294913272

### Address to the randomness used in computing the constraint composition polynomial
const.COMPOSITION_COEF_PTR=4294913276

### Address to the randomness used in computing the DEEP polynomial
const.DEEP_RAND_CC_PTR=4294913280

## ACE related
## 3225419776 = 2**31 + 2**30 + 2**22

### We use 2 extension field elements for a total of 4 base field elements.
const.AUX_RAND_ELEM_PTR=3225419776

### OOD evaluations require a total of (80 + 8) * 2 * 2 field elements for current and next trace
### polynomials and 8 * 2 * 2 field elements for current and next constraint composition polynomials
const.OOD_EVALUATIONS_PTR=3225419780        # AUX_RAND_ELEM_PTR + 4

### We need to allocate for 12 field
const.AUXILIARY_ACE_INPUTS_PTR=3225420164   # AUXILIARY_ACE_INPUTS_PTR + (80 + 8 + 8) * 2 * 2

### Address at the start of the memory region holding the arithmetic circuit for constraint evaluation
const.ACE_CIRCUIT_PTR=3225420176            # AUXILIARY_ACE_INPUTS_PTR + 12

## FRI
##
##       (FRI_COM_PTR - 600)     ---|
##              .
##              .                   | <- FRI queries
##              .
##         FRI_COM_PTR           ---|
##              .
##              .                   | <- FRI layer commitments and folding challenges
##              .
##       (FRI_COM_PTR + 256)     ---|
##              .
##              .                   | <- Remainder polynomial
##              .
##       (FRI_COM_PTR + 512-1)   ---|
##
## For each FRI layer, we need 8 memory slots, one for storing the FRI layer commitment and one for
## storing the word [a0, a1, log2(lde_size), lde_size] where a := (a0, a1) is the folding randomness
## and lde_size is the size of the LDE domain of the corresponding FRI layer.
## Since we are using a folding factor of 4 and the maximal degree of the remainder polynomial
## that we allow is 127, an upper limit of 32 FRI layers is ample and the number of memory slots
## we thus allocate for this is 256. Moreover, we allocate an additional 256 slots for the remainder
## polynomial which is expected to be laid out right after the FRI commitments.
##
## 3229614080 = 2**31 + 2**30 + 2**23
const.FRI_COM_PTR=4294912800

## Current trace row
## 80 field elements for main portion of trace, 8 * 2 field elements for auxiliary portion of trace
## and 8 * 2 field elements for constraint composition polynomials, i.e., the number of slots
## required is 80 + 16 + 16 = 112
##
## 3238002688 = 2**31 + 2**30 + 2**24
const.CURRENT_TRACE_ROW_PTR=3238002688

# ACCESSORS
# =================================================================================================

export.num_public_inputs_ptr
    push.NUM_PUBLIC_INPUTS_PTR
end

export.public_inputs_address_ptr
    push.PUBLIC_INPUTS_ADDRESS_PTR
end

export.variable_length_public_inputs_address_ptr
    push.VARIABLE_LEN_PUBLIC_INPUTS_ADDRESS_PTR
end

export.ood_evaluations_ptr
    push.OOD_EVALUATIONS_PTR
end

export.current_trace_row_ptr
    push.CURRENT_TRACE_ROW_PTR
end

export.aux_rand_elem_ptr
    push.AUX_RAND_ELEM_PTR
end

export.composition_coef_ptr
    push.COMPOSITION_COEF_PTR
end

export.deep_rand_coef_ptr
    push.DEEP_RAND_CC_PTR
end

export.fri_com_ptr
    push.FRI_COM_PTR
end

export.main_trace_com_ptr
    push.MAIN_TRACE_COM_PTR
end

export.aux_trace_com_ptr
    push.AUX_TRACE_COM_PTR
end

export.composition_poly_com_ptr
    push.COMPOSITION_POLY_COM_PTR
end

#! Address for the point `z` and its exponentiation `z^N` where `N=trace_len`.
#!
#! The word stored is `[z_0, z_1, z^n_0, z^n_1]`.
export.z_ptr
    push.Z_PTR
end

#! Returns the pointer to the capacity word of the RPO-based random coin.
export.c_ptr
    push.C_PTR
end

#! Returns the pointer to the first rate word of the RPO-based random coin.
export.r1_ptr
    push.R1_PTR
end

#! Returns the pointer to the second rate word of the RPO-based random coin.
export.r2_ptr
    push.R2_PTR
end

export.zero_word_ptr
    push.ZERO_WORD_PTR
end

export.deep_rand_alpha_nd_ptr
    push.ALPHA_DEEP_ND_PTR
end

export.ood_fixed_term_horner_evaluations_ptr
    push.OOD_FIXED_TERM_HORNER_EVALS_PTR
end

export.tmp1
    push.TMP1
end

export.tmp2
    push.TMP2
end

export.tmp3
    push.TMP3
end

export.tmp4
    push.TMP4
end

export.zeroize_stack_word
    exec.zero_word_ptr mem_loadw
end

export.get_blowup_factor
    push.BLOWUP_FACTOR
end

export.get_blowup_factor_log
    push.BLOWUP_FACTOR_LOG
end

#! Store details about the LDE domain.
#!
#! The info stored is `[lde_size, log(lde_size), lde_g, 0]`.
export.set_lde_domain_info_word
    push.LDE_DOMAIN_INFO_PTR mem_storew
end

#! Load details about the LDE domain.
#!
#! The info stored is `[lde_size, log(lde_size), lde_g, 0]`.
export.get_lde_domain_info_word
    push.LDE_DOMAIN_INFO_PTR mem_loadw
end

export.get_root_unity
    push.ROOT_UNITY
end

export.get_num_aux_trace_coefs
    push.NUM_AUX_TRACE_COEFS
end

export.get_domain_offset
    push.DOMAIN_OFFSET
end

export.get_domain_offset_inv
    push.DOMAIN_OFFSET_INV
end

export.get_num_constraints
    push.NUM_CONSTRAINTS
end

export.set_trace_domain_generator
    push.TRACE_DOMAIN_GENERATOR_PTR mem_store
end

export.get_trace_domain_generator
    push.TRACE_DOMAIN_GENERATOR_PTR mem_load
end

export.set_lde_domain_generator
    push.LDE_DOMAIN_GEN_PTR mem_store
end

export.get_lde_domain_generator
    push.LDE_DOMAIN_GEN_PTR mem_load
end

export.set_number_queries
    push.NUM_QUERIES_PTR mem_store
end

export.get_number_queries
    push.NUM_QUERIES_PTR mem_load
end

export.set_remainder_poly_size
    push.REMAINDER_POLY_SIZE_PTR mem_store
end

export.get_remainder_poly_size
    push.REMAINDER_POLY_SIZE_PTR mem_load
end

export.set_num_fri_layers
    push.NUM_FRI_LAYERS_PTR mem_store
end

export.get_num_fri_layers
    push.NUM_FRI_LAYERS_PTR mem_load
end

export.set_remainder_poly_address
    push.REMAINDER_POLY_ADDRESS_PTR mem_store
end

export.get_remainder_poly_address
    push.REMAINDER_POLY_ADDRESS_PTR mem_load
end

export.set_fri_queries_address
    push.FRI_QUERIES_ADDRESS_PTR mem_store
end

export.get_fri_queries_address
    push.FRI_QUERIES_ADDRESS_PTR mem_load
end

export.set_lde_domain_size
    push.LDE_DOMAIN_SIZE_PTR mem_store
end

export.get_lde_domain_size
    push.LDE_DOMAIN_SIZE_PTR mem_load
end

export.set_lde_domain_log_size
    push.LDE_DOMAIN_LOG_SIZE_PTR mem_store 
end

export.get_lde_domain_log_size
    push.LDE_DOMAIN_LOG_SIZE_PTR mem_load
end

export.set_trace_length
    push.TRACE_LENGTH_PTR mem_store
end

export.get_trace_length
    push.TRACE_LENGTH_PTR mem_load
end

export.set_trace_length_log
    push.TRACE_LENGTH_LOG_PTR mem_store
end

export.get_trace_length_log
    push.TRACE_LENGTH_LOG_PTR mem_load
end

export.set_grinding_factor
    push.GRINDING_FACTOR_PTR mem_store
end

export.get_grinding_factor
    push.GRINDING_FACTOR_PTR mem_load
end

export.auxiliary_ace_inputs_ptr
    push.AUXILIARY_ACE_INPUTS_PTR
end

export.get_max_cycle_length_log
    push.MAX_CYCLE_LEN_LOG
end

export.get_arithmetic_circuit_ptr
    push.ACE_CIRCUIT_PTR
end

export.get_arithmetic_circuit_eval_digest
    push.DIGEST_0
    push.DIGEST_1
    push.DIGEST_2
    push.DIGEST_3
end

export.get_arithmetic_circuit_eval_number_inputs
    push.NUM_INPUTS_CIRCUIT
end

export.get_arithmetic_circuit_eval_number_eval_gates
    push.NUM_EVAL_GATES_CIRCUIT
end

export.aux_rand_nd_ptr
    push.AUX_RAND_ND_PTR
end

export.kernel_proc_table_op_label
    push.KERNEL_OP_LABEL
end

export.get_num_fixed_len_public_inputs
    push.NUM_FIXED_LEN_PUBLIC_INPUTS
end
