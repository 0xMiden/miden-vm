use num_enum::TryFromPrimitive;

mod serialization;
pub use serialization::{ByteWriter, Serializable};

mod deserialization;
pub use deserialization::{ByteReader, Deserializable};

const IF_ELSE_OPCODE: u8 = 253;
const REPEAT_OPCODE: u8 = 254;
const WHILE_OPCODE: u8 = 255;

// OPERATION CODES ENUM
// ================================================================================================

#[repr(u8)]
#[derive(Copy, Clone, Debug, PartialEq, Eq, TryFromPrimitive)]
pub enum OpCode {
    Assert = 0,
    AssertEq = 1,
    Assertz = 2,
    Add = 3,
    AddImm = 4,
    Sub = 5,
    SubImm = 6,
    Mul = 7,
    MulImm = 8,
    Div = 9,
    DivImm = 10,
    Neg = 11,
    Inv = 12,
    Pow2 = 13,
    Exp = 14,
    Not = 15,
    And = 16,
    Or = 17,
    Xor = 18,
    Eq = 19,
    EqImm = 20,
    Neq = 21,
    NeqImm = 22,
    Eqw = 23,
    Lt = 24,
    Lte = 25,
    Gt = 26,
    Gte = 27,

    // ----- u32 manipulation ---------------------------------------------------------------
    U32Test = 28,
    U32TestW = 29,
    U32Assert = 30,
    U32AssertW = 31,
    U32Split = 32,
    U32Cast = 33,
    U32CheckedAdd = 34,
    U32CheckedAddImm = 35,
    U32WrappingAdd = 36,
    U32WrappingAddImm = 37,
    U32OverflowingAdd = 38,
    U32OverflowingAddImm = 39,
    U32OverflowingAdd3 = 40,
    U32WrappingAdd3 = 41,
    U32CheckedSub = 42,
    U32CheckedSubImm = 43,
    U32WrappingSub = 44,
    U32WrappingSubImm = 45,
    U32OverflowingSub = 46,
    U32OverflowingSubImm = 47,
    U32CheckedMul = 48,
    U32CheckedMulImm = 49,
    U32WrappingMul = 50,
    U32WrappingMulImm = 51,
    U32OverflowingMul = 52,
    U32OverflowingMulImm = 53,
    U32OverflowingMadd = 54,
    U32WrappingMadd = 55,
    U32CheckedDiv = 56,
    U32CheckedDivImm = 57,
    U32UncheckedDiv = 58,
    U32UncheckedDivImm = 59,
    U32CheckedMod = 60,
    U32CheckedModImm = 61,
    U32UncheckedMod = 62,
    U32UncheckedModImm = 63,
    U32CheckedDivMod = 64,
    U32CheckedDivModImm = 65,
    U32UncheckedDivMod = 66,
    U32UncheckedDivModImm = 67,
    U32CheckedAnd = 68,
    U32CheckedOr = 69,
    U32CheckedXor = 70,
    U32CheckedNot = 71,
    U32CheckedShr = 72,
    U32CheckedShrImm = 73,
    U32UncheckedShr = 74,
    U32UncheckedShrImm = 75,
    U32CheckedShl = 76,
    U32CheckedShlImm = 77,
    U32UncheckedShl = 78,
    U32UncheckedShlImm = 79,
    U32CheckedRotr = 80,
    U32CheckedRotrImm = 81,
    U32UncheckedRotr = 82,
    U32UncheckedRotrImm = 83,
    U32CheckedRotl = 84,
    U32CheckedRotlImm = 85,
    U32UncheckedRotl = 86,
    U32UncheckedRotlImm = 87,
    U32CheckedEq = 88,
    U32CheckedEqImm = 89,
    U32CheckedNeq = 90,
    U32CheckedNeqImm = 91,
    U32CheckedLt = 92,
    U32UncheckedLt = 93,
    U32CheckedLte = 94,
    U32UncheckedLte = 95,
    U32CheckedGt = 96,
    U32UncheckedGt = 97,
    U32CheckedGte = 98,
    U32UncheckedGte = 99,
    U32CheckedMin = 100,
    U32UncheckedMin = 101,
    U32CheckedMax = 102,
    U32UncheckedMax = 103,

    // ----- stack manipulation ---------------------------------------------------------------
    Drop = 104,
    DropW = 105,
    PadW = 106,
    Dup0 = 107,
    Dup1 = 108,
    Dup2 = 109,
    Dup3 = 110,
    Dup4 = 111,
    Dup5 = 112,
    Dup6 = 113,
    Dup7 = 114,
    Dup8 = 115,
    Dup9 = 116,
    Dup10 = 117,
    Dup11 = 118,
    Dup12 = 119,
    Dup13 = 120,
    Dup14 = 121,
    Dup15 = 122,
    DupW0 = 123,
    DupW1 = 124,
    DupW2 = 125,
    DupW3 = 126,
    Swap = 127,
    Swap2 = 128,
    Swap3 = 129,
    Swap4 = 130,
    Swap5 = 131,
    Swap6 = 132,
    Swap7 = 133,
    Swap8 = 134,
    Swap9 = 135,
    Swap10 = 136,
    Swap11 = 137,
    Swap12 = 138,
    Swap13 = 139,
    Swap14 = 140,
    Swap15 = 141,
    SwapW = 142,
    SwapW2 = 143,
    SwapW3 = 144,
    SwapDW = 145,
    MovUp2 = 146,
    MovUp3 = 147,
    MovUp4 = 148,
    MovUp5 = 149,
    MovUp6 = 150,
    MovUp7 = 151,
    MovUp8 = 152,
    MovUp9 = 153,
    MovUp10 = 154,
    MovUp11 = 155,
    MovUp12 = 156,
    MovUp13 = 157,
    MovUp14 = 158,
    MovUp15 = 159,
    MovUpW2 = 160,
    MovUpW3 = 161,
    MovDn2 = 162,
    MovDn3 = 163,
    MovDn4 = 164,
    MovDn5 = 165,
    MovDn6 = 166,
    MovDn7 = 167,
    MovDn8 = 168,
    MovDn9 = 169,
    MovDn10 = 170,
    MovDn11 = 171,
    MovDn12 = 172,
    MovDn13 = 173,
    MovDn14 = 174,
    MovDn15 = 175,
    MovDnW2 = 176,
    MovDnW3 = 177,
    CSwap = 178,
    CSwapW = 179,
    CDrop = 180,
    CDropW = 181,

    // ----- input / output operations --------------------------------------------------------
    PushConstants = 182,

    Locaddr = 183,
    Sdepth = 184,
    Caller = 185,

    MemLoad = 186,
    MemLoadImm = 187,
    MemLoadW = 188,
    MemLoadWImm = 189,
    LocLoad = 190,
    LocLoadW = 191,
    MemStore = 192,
    MemStoreImm = 193,
    LocStore = 194,
    MemStoreW = 195,
    MemStoreWImm = 196,
    LocStoreW = 197,

    MemStream = 198,

    AdvPush = 199,
    AdvLoadW = 200,

    AdvU64Div = 201,

    // ----- cryptographic operations ---------------------------------------------------------
    RPHash = 202,
    RPPerm = 203,
    MTreeGet = 204,
    MTreeSet = 205,
    MTreeCWM = 206,

    // ----- exec / call ----------------------------------------------------------------------
    ExecLocal = 207,
    ExecImported = 208,
    CallLocal = 209,
    CallImported = 210,
}
